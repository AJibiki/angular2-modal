{"version":3,"file":"message-modal.component.js","sourceRoot":"","sources":["message-modal.component.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA6C,eAAe,CAAC,CAAA;AAE7D,+BAGO,yBAAyB,CAAC,CAAA;AA6BjC;IAGI,6BAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;QACpD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IAClC,CAAC;IACD,sBAAI,0CAAS;aAAb;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;QAC1C,CAAC;;;OAAA;IArBL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,aAAa;YACvB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EACN,gbAOE;SACP,CAAC;;2BAAA;IAUF,0BAAC;AAAD,CAAC,AATD,IASC;AATY,2BAAmB,sBAS/B,CAAA;AAOD;IACI,4BAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;IAAG,CAAC;IANhE;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,YAAY;YACtB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,2FAAuF;SACpG,CAAC;;0BAAA;IAGF,yBAAC;AAAD,CAAC,AAFD,IAEC;AAFY,0BAAkB,qBAE9B,CAAA;AAGD;;GAEG;AAUH;IACI,uBAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;IAAG,CAAC;IAE5D,+BAAO,GAAP,UAAQ,GAA+B,EAAE,MAAkB;QACvD,MAAM,CAAC,eAAe,EAAE,CAAC;QACzB,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;IAfL;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,kOAIP;SACN,CAAC;;qBAAA;IAQF,oBAAC;AAAD,CAAC,AAPD,IAOC;AAPY,qBAAa,gBAOzB,CAAA;AAED;;;;;;;;;;;;;;;;;GAiBG;AAMH;IACI,wBAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;IAAI,CAAC;IANjE;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,eAAe;YACzB,aAAa,EAAE,wBAAiB,CAAC,IAAI;YACrC,QAAQ,EAAE,mFAAmF;SAChG,CAAC;;sBAAA;IAGF,qBAAC;AAAD,CAAC,AAFD,IAEC;AAFY,sBAAc,iBAE1B,CAAA","sourcesContent":["import { Component, ViewEncapsulation } from '@angular/core';\n\nimport {\n  DialogRef,\n  ModalComponent\n} from '../../../angular2-modal';\nimport { MessageModalPreset } from'./presets/message-modal-preset';\n\nexport interface BSMessageModalButtonHandler {\n    (cmp: ModalComponent<MessageModalPreset>, $event: MouseEvent): void;\n}\n\n/**\n * Interface for button definition\n */\nexport interface BSMessageModalButtonConfig {\n    cssClass: string;\n    caption: string;\n    onClick: BSMessageModalButtonHandler;\n}\n\n@Component({\n    selector: 'modal-title',\n    encapsulation: ViewEncapsulation.None,\n    template:\n      `<div [ngClass]=\"context.headerClass\" [ngSwitch]=\"titleHtml\">\n      <button *ngIf=\"context.showClose\" type=\"button\" class=\"close\" \n              aria-label=\"Close\" (click)=\"dialog.dismiss()\">\n          <span aria-hidden=\"true\">Ã—</span>\n      </button>\n      <div *ngSwitchCase=\"1\" [innerHtml]=\"context.titleHtml\"></div>\n      <h3 *ngSwitchDefault class=\"modal-title\">{{context.title}}</h3>\n </div>`\n})\nexport class BSMessageModalTitle {\n    public context: MessageModalPreset;\n\n    constructor(public dialog: DialogRef<MessageModalPreset>) {\n        this.context = dialog.context;\n    }\n    get titleHtml(): number {\n        return this.context.titleHtml ? 1 : 0;\n    }\n}\n\n@Component({\n    selector: 'modal-body',\n    encapsulation: ViewEncapsulation.None,\n    template: `<div [ngClass]=\"dialog.context.bodyClass\" [innerHtml]=\"dialog.context.message\"></div>`\n})\nexport class BSMessageModalBody {\n    constructor(public dialog: DialogRef<MessageModalPreset>) {}\n}\n\n\n/**\n * Represents the modal footer for storing buttons.\n */\n@Component({\n    selector: 'modal-footer',\n    encapsulation: ViewEncapsulation.None,\n    template: `<div [ngClass]=\"dialog.context.footerClass\">\n    <button *ngFor=\"let btn of dialog.context.buttons;\"\n            [ngClass]=\"btn.cssClass\"\n            (click)=\"onClick(btn, $event)\">{{btn.caption}}</button>\n</div>`\n})\nexport class BSModalFooter {\n    constructor(public dialog: DialogRef<MessageModalPreset>) {}\n\n    onClick(btn: BSMessageModalButtonConfig, $event: MouseEvent) {\n        $event.stopPropagation();\n        btn.onClick(this, $event);\n    }\n}\n\n/**\n * A Component representing a generic bootstrap modal content element.\n *\n * By configuring a MessageModalContext instance you can:\n *\n *  Header:\n *      - Set header container class (default: modal-header)\n *      - Set title text (enclosed in H3 element)\n *      - Set title html (overrides text)\n *\n *  Body:\n *      - Set body container class.  (default: modal-body)\n *      - Set body container HTML.\n *\n *  Footer:\n *      - Set footer class.  (default: modal-footer)\n *      - Set button configuration (from 0 to n)\n */\n@Component({\n    selector: 'modal-content',\n    encapsulation: ViewEncapsulation.None,\n    template: `<modal-title></modal-title><modal-body></modal-body><modal-footer></modal-footer>`\n})\nexport class BSMessageModal implements ModalComponent<MessageModalPreset> {\n    constructor(public dialog: DialogRef<MessageModalPreset>) { }\n}\n"]}