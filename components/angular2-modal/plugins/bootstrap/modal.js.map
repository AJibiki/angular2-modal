{"version":3,"file":"modal.js","sourceRoot":"","sources":["modal.ts"],"names":[],"mappings":"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","sourcesContent":["import 'rxjs/add/operator/first';\n\nimport {\n  Injectable,\n  ResolvedReflectiveProvider as RRP\n} from '@angular/core';\n\nimport {\n  Maybe,\n  Overlay,\n  DialogRef,\n  Modal as Modal_,\n  CSSBackdrop,\n  CSSDialogContainer,\n  PromiseCompleter\n} from '../../../../components/angular2-modal';\n\nimport { BSModalContainer } from './modal-container.component';\n\nimport { OneButtonPresetBuilder } from './../bootstrap/presets/one-button-preset';\nimport { TwoButtonPresetBuilder } from './../bootstrap/presets/two-button-preset';\n\n\n@Injectable()\nexport class Modal extends Modal_ {\n  constructor(overlay: Overlay) {\n    super(overlay);\n  }\n\n  alert(): OneButtonPresetBuilder {\n    return new OneButtonPresetBuilder(this, <any>{isBlocking: false});\n  }\n\n  prompt(): OneButtonPresetBuilder {\n    return new OneButtonPresetBuilder(this, <any>{isBlocking: true, keyboard: null});\n  }\n\n  confirm(): TwoButtonPresetBuilder {\n    return new TwoButtonPresetBuilder(this, <any>{isBlocking: true, keyboard: null});\n  }\n\n  protected create(dialogRef: DialogRef<any>,\n                   type: any,\n                   bindings?: RRP[]): Maybe<DialogRef<any>> {\n\n    let refs = this.createModal(dialogRef, CSSBackdrop, CSSDialogContainer);\n\n    refs.containerRef\n      .instance.addComponent(BSModalContainer, bindings)\n      .instance.addComponent(type, bindings);\n\n\n    let overlay = dialogRef.overlayRef.instance;\n    let backdrop = refs.backdropRef.instance;\n    let container = refs.containerRef.instance;\n\n    dialogRef.inElement ? overlay.insideElement() : overlay.fullscreen();\n\n    // add body class if this is the only dialog in the stack\n    if (!document.body.classList.contains('modal-open')) {\n      document.body.classList.add('modal-open');\n    }\n\n    // on removal, remove if last.\n    dialogRef.onDestroy\n      .subscribe(() => this.overlay.stackLength === 0 && document.body.classList.remove('modal-open'));\n\n    backdrop.addClass('modal-backdrop fade');\n    backdrop.addClass('in', true);\n    container.addClass('modal fade');\n    container.setStyle('position', 'absolute');\n    container.setStyle('display', 'block');\n    container.addClass('in', true);\n\n    if (refs.containerRef.location.nativeElement) {\n      refs.containerRef.location.nativeElement.focus();\n    }\n\n    overlay.beforeDestroy(() => {\n      const completer = new PromiseCompleter<void>();\n\n      backdrop.removeClass('in');\n      container.removeClass('in');\n\n      backdrop.animationEnd$.first().subscribe(type => completer.resolve());\n\n      return completer.promise;\n    });\n\n    return dialogRef;\n  }\n}\n"]}