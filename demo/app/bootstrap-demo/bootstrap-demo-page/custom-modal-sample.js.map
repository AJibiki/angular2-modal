{"version":3,"file":"custom-modal-sample.js","sourceRoot":"","sources":["custom-modal-sample.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,qBAA0B,eAAe,CAAC,CAAA;AAE1C,+BAAsD,uCAAuC,CAAC,CAAA;AAC9F,sBAA+B,+DAA+D,CAAC,CAAA;AAE/F;IAAwC,sCAAc;IAAtD;QAAwC,8BAAc;IAGtD,CAAC;IAAD,yBAAC;AAAD,CAAC,AAHD,CAAwC,sBAAc,GAGrD;AAHY,0BAAkB,qBAG9B,CAAA;AAED;;GAEG;AAuCH;IAKE,qBAAmB,MAAqC;QAArC,WAAM,GAAN,MAAM,CAA+B;QACtD,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,MAAM,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,6BAAO,GAAP,UAAQ,KAAK;QACX,IAAI,CAAC,WAAW,GAAG,KAAK,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC;IACtB,CAAC;IAGD,mCAAa,GAAb;QACE,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAED,iCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IA7DH;QAAC,gBAAS,CAAC;YACT,QAAQ,EAAE,eAAe;YACzB,MAAM,EAAE,CAAC,icAcN,CAAC;YACJ,+FAA+F;YAC/F,sBAAsB;YACtB,oBAAoB,CAAC,QAAQ,EAAE,m5BAiBlB;SACd,CAAC;;mBAAA;IAyBF,kBAAC;AAAD,CAAC,AAxBD,IAwBC;AAxBY,mBAAW,cAwBvB,CAAA","sourcesContent":["import { Component } from '@angular/core';\n\nimport { DialogRef, ModalComponent, CloseGuard } from '../../../../components/angular2-modal';\nimport { BSModalContext } from '../../../../components/angular2-modal/plugins/bootstrap/index';\n\nexport class CustomModalContext extends BSModalContext {\n  public num1: number;\n  public num2: number;\n}\n\n/**\n * A Sample of how simple it is to create a new window, with its own injects.\n */\n@Component({\n  selector: 'modal-content',\n  styles: [`\n        .custom-modal-container {\n            padding: 15px;\n        }\n\n        .custom-modal-header {\n            background-color: #219161;\n            color: #fff;\n            -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.75);\n            margin-top: -15px;\n            margin-bottom: 40px;\n        }\n    `],\n  //TODO: [ngClass] here on purpose, no real use, just to show how to workaround ng2 issue #4330.\n  // Remove when solved.\n  /* tslint:disable */ template: `\n        <div class=\"container-fluid custom-modal-container\">\n            <div class=\"row custom-modal-header\">\n                <div class=\"col-sm-12\">\n                    <h1>A Custom modal design</h1>\n                </div>\n            </div>\n            <div class=\"row\" [ngClass]=\"{'myclass' : shouldUseMyClass}\">\n                <div class=\"col-xs-12\">\n                    <div class=\"jumbotron\">\n                        <h1>Do the math to quit:</h1>\n                        <p class=\"lead\">I received an injection of the number <strong>{{context.num1}}</strong> and the number <strong>{{context.num2}}</strong></p>\n                        <span>What is the sum?</span>\n                         <input class=\"form-control\" type=\"text\" #answer (keyup)=\"onKeyUp(answer.value)\" autofocus>\n                    </div>\n                </div>\n            </div>\n        </div>`\n})\nexport class CustomModal implements CloseGuard, ModalComponent<CustomModalContext> {\n  context: CustomModalContext;\n\n  public wrongAnswer: boolean;\n\n  constructor(public dialog: DialogRef<CustomModalContext>) {\n    this.context = dialog.context;\n    this.wrongAnswer = true;\n    dialog.setCloseGuard(this);\n  }\n\n  onKeyUp(value) {\n    this.wrongAnswer = value != 5;\n    this.dialog.close();\n  }\n\n\n  beforeDismiss(): boolean {\n    return true;\n  }\n\n  beforeClose(): boolean {\n    return this.wrongAnswer;\n  }\n}\n"]}